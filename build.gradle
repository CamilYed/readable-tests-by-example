plugins {
	id "org.springframework.boot" version "2.5.2"
	id "io.spring.dependency-management" version "1.0.11.RELEASE"
	id "java"
  id "groovy"
  id "application"
}

group = 'tech.allegro.blog'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(11)
  }
}

repositories {
	mavenCentral()
}

project.ext.versions = [
    lombok             : '1.18.20',
    feign              : '3.0.3',
		spock              : '2.0-groovy-3.0',
    wiremock           : '2.27.2'
]

configurations {
  integrationTest {
    extendsFrom testRuntimeClasspath
  }
}

dependencies {
  compileOnly "org.projectlombok:lombok:${versions.lombok}"
  annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
	implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation "org.springframework.cloud:spring-cloud-starter-openfeign:${versions.feign}"
  testCompileOnly "org.projectlombok:lombok:${versions.lombok}"
  testAnnotationProcessor "org.projectlombok:lombok:${versions.lombok}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.spockframework:spock-core:${versions.spock}"
  integrationTest "com.github.tomakehurst:wiremock-jre8-standalone:${versions.wiremock}"
}

sourceSets {
  integrationTest {
    groovy {
      compileClasspath += main.output + test.output + project.configurations.testRuntimeClasspath + project.configurations.integrationTest
      runtimeClasspath += output + compileClasspath + project.configurations.testRuntimeClasspath
      srcDir {
        file('src/integrationTest/groovy')
      }
    }
    resources.srcDir file('src/integrationTest/resources')
  }
}

test {
  useJUnitPlatform()
  include '**/*Spec.*'
  include '**/*Test.*'
  testLogging {
    exceptionFormat = 'full'
    events = ["STARTED", "PASSED", "SKIPPED", "FAILED"]
  }
}

task integrationTest(type: Test) {
  useJUnitPlatform()
  include '**/*Spec.*'
  include '**/*Test.*'
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  systemProperty 'spring.profiles.active', 'integration'
  outputs.upToDateWhen { false }
  testLogging {
    exceptionFormat = 'full'
    events = ["STARTED", "PASSED", "SKIPPED", "FAILED"]
  }
}

compileJava {
  options.encoding = 'UTF-8'
}

wrapper {
  gradleVersion = '7.1.1'
}
